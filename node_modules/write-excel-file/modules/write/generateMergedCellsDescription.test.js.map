{"version":3,"file":"generateMergedCellsDescription.test.js","names":["generateMergedCellsDescription","describe","it","expect","value","span","undefined","schema","to","equal","rowSpan"],"sources":["../../source/write/generateMergedCellsDescription.test.js"],"sourcesContent":["import generateMergedCellsDescription from './generateMergedCellsDescription.js'\r\n\r\ndescribe('generateMergedCellsDescription()', () => {\r\n  it('should generate merged cells across columns', () => {\r\n    expect(generateMergedCellsDescription([\r\n      [\r\n        { value: '1', span: 3 },\r\n        undefined,\r\n        null\r\n      ]\r\n    ], { schema: undefined }))\r\n      .to.equal('<mergeCells count=\"1\"><mergeCell ref=\"A1:C1\"/></mergeCells>')\r\n  })\r\n\r\n  it('should generate merged cells across columns and rows', () => {\r\n    expect(generateMergedCellsDescription([\r\n      [\r\n        { value: '1.1' },\r\n        { value: '1.2' },\r\n        { value: '1.3' }\r\n      ],\r\n      [\r\n        { value: '2.1', span: 3, rowSpan: 2 },\r\n        null,\r\n        null\r\n      ],\r\n      [\r\n        null,\r\n        null,\r\n        null\r\n      ]\r\n    ], { schema: undefined }))\r\n      .to.equal('<mergeCells count=\"1\"><mergeCell ref=\"A2:C3\"/></mergeCells>')\r\n  })\r\n\r\n  it('should validate overlapping cells when using `span`', () => {\r\n    expect(() => generateMergedCellsDescription([\r\n      [\r\n        { value: '1', span: 3 },\r\n        { value: '2' },\r\n        { value: '3' }\r\n      ]\r\n    ], { schema: undefined }))\r\n      .to.throw('Cell at row 1 and column 2')\r\n  })\r\n\r\n  it('should validate overlapping cells when using `rowSpan`', () => {\r\n    expect(() => generateMergedCellsDescription([\r\n      [\r\n        { value: '1.1', rowSpan: 2 },\r\n        { value: '1.2' }\r\n      ],\r\n      [\r\n        { value: '2.1' },\r\n        { value: '2.2' }\r\n      ]\r\n    ], { schema: undefined }))\r\n      .to.throw('Cell at row 2 and column 1')\r\n  })\r\n\r\n  it('should validate overlapping cells when using `span` and `rowSpan`', () => {\r\n    expect(() => generateMergedCellsDescription([\r\n      [\r\n        { value: '1.1' },\r\n        { value: '1.2' },\r\n        { value: '1.3' }\r\n      ],\r\n      [\r\n        { value: '2.1', span: 3, rowSpan: 2 },\r\n        { value: '2.2' },\r\n        { value: '2.3' }\r\n      ],\r\n      [\r\n        { value: '3.1' },\r\n        { value: '3.2' },\r\n        { value: '3.3' }\r\n      ]\r\n    ], { schema: undefined }))\r\n      .to.throw('Cell at row 2 and column 2')\r\n\r\n    expect(() => generateMergedCellsDescription([\r\n      [\r\n        { value: '1.1' },\r\n        { value: '1.2' },\r\n        { value: '1.3' }\r\n      ],\r\n      [\r\n        { value: '2.1', span: 3, rowSpan: 2 },\r\n        null,\r\n        null\r\n      ],\r\n      [\r\n        { value: '3.1' },\r\n        { value: '3.2' },\r\n        { value: '3.3' }\r\n      ]\r\n    ], { schema: undefined }))\r\n      .to.throw('Cell at row 3 and column 1')\r\n  })\r\n})"],"mappings":"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"}